"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PropsProxy = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = require("prop-types");

var _isRefSupported = require("../../utils/is-ref-supported");

var PropsProxy =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(PropsProxy, _Component);

  function PropsProxy() {
    (0, _classCallCheck2.default)(this, PropsProxy);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PropsProxy).apply(this, arguments));
  }

  (0, _createClass2.default)(PropsProxy, [{
    key: "render",

    /**
     * The final proxy in the chain that renders the selected component.
     */
    value: function render() {
      var _this$props = this.props,
          _this$props$fixture = _this$props.fixture,
          C = _this$props$fixture.component,
          props = _this$props$fixture.props,
          fixtureChildren = _this$props$fixture.children,
          onComponentRef = _this$props.onComponentRef; // Legacy versions of react-cosmos supported specifying children
      // directly on the fixture, rather than in fixture.props

      var finalProps = (0, _objectSpread2.default)({
        children: fixtureChildren
      }, props); // Stateless components can't have refs, but forwardRef can

      if ((0, _isRefSupported.isRefSupported)(C)) {
        return _react.default.createElement(C, (0, _extends2.default)({}, finalProps, {
          ref: onComponentRef
        }));
      }

      return _react.default.createElement(C, finalProps);
    }
  }]);
  return PropsProxy;
}(_react.Component);

exports.PropsProxy = PropsProxy;
PropsProxy.propTypes = {
  fixture: _propTypes.object.isRequired,
  onComponentRef: _propTypes.func.isRequired
};