"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPlaygroundOpts = getPlaygroundOpts;

var _server = require("react-cosmos-shared/server");

var _resolveFrom = require("resolve-from");

var _userWebpackConfig = require("./webpack/user-webpack-config");

function getPlaygroundOpts(cosmosConfig) {
  var rootPath = cosmosConfig.rootPath,
      publicUrl = cosmosConfig.publicUrl,
      plugin = cosmosConfig.plugin;
  return {
    platform: 'web',
    projectKey: rootPath,
    loaderUri: (0, _server.slash)(publicUrl, '_loader.html'),
    webpackConfigType: (0, _userWebpackConfig.hasUserCustomWebpackConfig)(cosmosConfig) ? 'custom' : 'default',
    deps: getDeps(cosmosConfig),
    plugin: plugin
  };
}

function getDeps(_ref) {
  var rootPath = _ref.rootPath;
  // We use knowledge of installed dependencies, collected on the server side,
  // to guide user onboarding in the Cosmos UI
  return {
    'html-webpack-plugin': hasDep(rootPath, 'html-webpack-plugin')
  };
}

function hasDep(rootPath, depName) {
  return Boolean((0, _resolveFrom.silent)(rootPath, depName));
}