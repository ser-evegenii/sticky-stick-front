"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = init;
exports.dismiss = dismiss;

var ErrorOverlay = _interopRequireWildcard(require("react-error-overlay"));

/* eslint-env browser */

/* global process */
var LAUNCH_EDITOR_ENDPOINT = '/__open-stack-frame-in-editor';

function init() {
  ErrorOverlay.startReportingRuntimeErrors({
    filename: process.env.PUBLIC_URL + '/main.js'
  });
  ErrorOverlay.setEditorHandler(function (errorLocation) {
    return window.fetch(getLaunchEditorUrl(errorLocation));
  });
  setUpBuildErrorReporting();
}

function dismiss() {
  ErrorOverlay.dismissRuntimeErrors();
}

function getLaunchEditorUrl(errorLocation) {
  var fileName = encodeURIComponent(errorLocation.fileName);
  var lineNumber = encodeURIComponent(errorLocation.lineNumber || 1);
  var colNumber = encodeURIComponent(errorLocation.colNumber || 1);
  return "".concat(LAUNCH_EDITOR_ENDPOINT, "?fileName=").concat(fileName, "&lineNumber=").concat(lineNumber, "&colNumber=").concat(colNumber);
}

function setUpBuildErrorReporting() {
  if (window.__webpack_hot_middleware_reporter__ === undefined) {
    return;
  }

  window.__webpack_hot_middleware_reporter__.useCustomOverlay({
    showProblems: function showProblems(type, obj) {
      if (type !== 'errors') {
        // We might've went from errors -> warnings
        ErrorOverlay.dismissBuildError();
      } else {
        ErrorOverlay.reportBuildError(obj[0]);
      }
    },
    clear: function clear() {
      ErrorOverlay.dismissBuildError();
    }
  });
}