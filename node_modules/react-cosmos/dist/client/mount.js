"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _reactCosmosShared = require("react-cosmos-shared");

var _client = require("react-cosmos-voyager2/client");

var _userModules = _interopRequireDefault(require("./user-modules"));

var _dom = require("react-cosmos-loader/dom");

var _reactErrorOverlay = require("react-error-overlay");

var loaderOpts = COSMOS_CONFIG;

function _default() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      isDev = _ref.isDev;

  var _getUserModules = (0, _userModules.default)(),
      fixtureModules = _getUserModules.fixtureModules,
      fixtureFiles = _getUserModules.fixtureFiles,
      deprecatedComponentModules = _getUserModules.deprecatedComponentModules,
      proxies = _getUserModules.proxies;

  var newStyleComponents = (0, _client.getComponents)({
    fixtureModules: (0, _reactCosmosShared.getNormalizedFixtureModules)(fixtureModules, fixtureFiles, deprecatedComponentModules),
    fixtureFiles: fixtureFiles
  });
  var fixtures = (0, _reactCosmosShared.getOldSchoolFixturesFromNewStyleComponents)(newStyleComponents);
  (0, _dom.mount)({
    proxies: (0, _reactCosmosShared.importModule)(proxies),
    fixtures: fixtures,
    loaderOpts: loaderOpts,
    // Send a noop callback for `dismissRuntimeErrors` when exporting, because
    // react-error-overlay is only initialized in `development` env
    dismissRuntimeErrors: isDev ? _reactErrorOverlay.dismissRuntimeErrors : function () {}
  });
}