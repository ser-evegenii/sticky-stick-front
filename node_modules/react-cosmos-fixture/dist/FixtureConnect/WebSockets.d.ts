import * as React from 'react';
import * as io from 'socket.io-client';
import { RendererRequest, OnRendererRequest, RendererResponse } from 'react-cosmos-shared2/renderer';
import { RemoteRendererApi } from '../shared';
export declare type Props = {
    children: (api: RemoteRendererApi) => React.ReactElement<any>;
    url: string;
};
export declare class WebSockets extends React.Component<Props> {
    socket: null | typeof io.Socket;
    onMessage: null | OnRendererRequest;
    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>;
    handleMessage: (msg: RendererRequest) => void;
    subscribe: (onMessage: OnRendererRequest) => void;
    unsubscribe: () => void;
    postMessage: (msg: RendererResponse) => void;
}
