"use strict";
exports.__esModule = true;
var react_test_renderer_1 = require("react-test-renderer");
var renderer_1 = require("react-cosmos-shared2/renderer");
var WS_URL = 'ws://localhost:8080';
var handlers = {};
var messages = [];
// FYI: Tried using https://github.com/thoov/mock-socket but at the time it
// didn't capture events as expected
jest.mock('socket.io-client', function () { return mockSocketIo; });
function mockSocketIo(url) {
    expect(url).toBe(WS_URL);
    return {
        on: on,
        off: function () { },
        emit: emit
    };
}
mockSocketIo.__getMockApi = function () { return ({
    WS_URL: WS_URL,
    getMessages: getMessages,
    postMessage: postMessage,
    resetMessages: resetMessages
}); };
function on(evt, cb) {
    handlers[evt] = cb;
}
function emit(path, msg) {
    if (path === renderer_1.RENDERER_MESSAGE_EVENT_NAME) {
        messages.push(msg);
    }
}
function getMessages() {
    return messages;
}
function postMessage(msg) {
    messages.push(msg);
    // Fake async delay
    setTimeout(function () {
        react_test_renderer_1.act(function () {
            handlers[renderer_1.RENDERER_MESSAGE_EVENT_NAME](msg);
        });
    });
}
function resetMessages() {
    messages = [];
}
exports.resetMessages = resetMessages;
