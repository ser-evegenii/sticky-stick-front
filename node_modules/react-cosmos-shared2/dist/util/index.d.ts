export declare type StateUpdater<T> = (prevState: T) => T;
export declare type SetStateAsync<StateUpdate> = (update: StateUpdate, callback?: () => unknown) => unknown;
export declare function updateItem<T>(items: Readonly<T[]>, item: T, update: Partial<T>): T[];
export declare function replaceOrAddItem<T>(items: Readonly<T[]>, matcher: (item: T) => boolean, item: T): T[];
export declare function removeItemMatch<T>(items: Readonly<T[]>, matcher: (item: T) => boolean): T[];
export declare function removeItem<T>(items: Readonly<T[]>, item: T): T[];
export declare function replaceKeys(str: string, map: {
    [key: string]: string;
}): string;
export { uuid } from './uuid';
