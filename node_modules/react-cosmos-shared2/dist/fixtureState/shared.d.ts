export declare type KeyValue = Record<string, unknown>;
export declare type FixtureDecoratorId = string;
export declare type FixtureElementId = {
    decoratorId: string;
    elPath: string;
};
export declare type FixtureStateValue = {
    serializable: boolean;
    key: string;
    stringified: string;
};
export declare type FixtureRenderKey = number;
export declare type FixtureStateProps = {
    elementId: FixtureElementId;
    values: FixtureStateValue[];
    renderKey: FixtureRenderKey;
    componentName: string;
};
export declare type FixtureStateClassState = {
    elementId: FixtureElementId;
    values: FixtureStateValue[];
};
export declare type FixtureState = {
    props?: FixtureStateProps[];
    classState?: FixtureStateClassState[];
} & Record<string, any>;
export declare function createValues(obj: KeyValue): FixtureStateValue[];
export declare function extendWithValues(obj: KeyValue, values: FixtureStateValue[]): KeyValue;
