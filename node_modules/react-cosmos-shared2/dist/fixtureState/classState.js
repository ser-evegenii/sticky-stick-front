"use strict";
exports.__esModule = true;
var lodash_1 = require("lodash");
var util_1 = require("../util");
function getFixtureStateClassState(fixtureState, decoratorId) {
    var classState = fixtureState.classState;
    return classState
        ? classState.filter(function (s) { return s.elementId.decoratorId === decoratorId; })
        : [];
}
exports.getFixtureStateClassState = getFixtureStateClassState;
function findFixtureStateClassState(fixtureState, elementId) {
    var classState = fixtureState.classState;
    return classState && lodash_1.find(classState, function (s) { return lodash_1.isEqual(s.elementId, elementId); });
}
exports.findFixtureStateClassState = findFixtureStateClassState;
function createFixtureStateClassState(_a) {
    var fixtureState = _a.fixtureState, elementId = _a.elementId, values = _a.values;
    var _b = fixtureState.classState, classState = _b === void 0 ? [] : _b;
    return util_1.replaceOrAddItem(classState, createClassStateMatcher(elementId), {
        elementId: elementId,
        values: values
    });
}
exports.createFixtureStateClassState = createFixtureStateClassState;
function updateFixtureStateClassState(_a) {
    var fixtureState = _a.fixtureState, elementId = _a.elementId, values = _a.values;
    var classStateItem = expectFixtureStateClassState(fixtureState, elementId);
    return util_1.updateItem(fixtureState.classState, classStateItem, {
        values: values
    });
}
exports.updateFixtureStateClassState = updateFixtureStateClassState;
function removeFixtureStateClassState(fixtureState, elementId) {
    return util_1.removeItemMatch(fixtureState.classState || [], createClassStateMatcher(elementId));
}
exports.removeFixtureStateClassState = removeFixtureStateClassState;
function createClassStateMatcher(elementId) {
    return function (p) { return lodash_1.isEqual(p.elementId, elementId); };
}
function expectFixtureStateClassState(fixtureState, elementId) {
    var classStateItem = findFixtureStateClassState(fixtureState, elementId);
    if (!classStateItem) {
        var elId = JSON.stringify(elementId);
        throw new Error("Fixture state class state missing for element \"" + elId + "\"");
    }
    return classStateItem;
}
